image: eclipse-temurin:17-jdk-alpine

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository" # absolute path to local repository, will be used to installe xternal libs

stages:          # List of stages for jobs, and their order of execution
  - prepare
  - build
  - package

cache:            # jobs that use the same cache donâ€™t have to download the files again
  paths:
    - .m2/repository
  key: "$CI_COMMIT_REF_SLUG" # all commits from the same branch will share the cache

prepare-job: # first create maven local repository and install external libs
  stage: prepare
  script:
    - mkdir -p $CI_PROJECT_DIR/.m2/repository # -p option : create all parents if thye don't exist, avoid error if they already exist
    - cd TourGuide
    - mvn install:install-file -Dfile=libs/gpsUtil.jar -DgroupId=gpsUtil -DartifactId=gpsUtil -Dversion=1.0.0 -Dpackaging=jar
    - mvn install:install-file -Dfile=libs/RewardCentral.jar -DgroupId=rewardCentral -DartifactId=rewardCentral -Dversion=1.0.0 -Dpackaging=jar
    - mvn install:install-file -Dfile=libs/TripPricer.jar -DgroupId=tripPricer -DartifactId=tripPricer -Dversion=1.0.0 -Dpackaging=jar

build-job: # check the local maven repository contains installed JARs and compile
  stage: build
  script:
    - cd TourGuide
    - ls -lR $CI_PROJECT_DIR/.m2/repository
    - mvn clean compile

package-job: # package the project
  stage: package
  script:
    - cd TourGuide
    - |
      ./mvnw package \
      -Dhttps.protocols=TLSv1.2 \
      -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository \
      -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN \
      -Dorg.slf4j.simpleLogger.showDateTime=true \
      -Djava.awt.headless=true \
      --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true